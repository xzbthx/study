package com.example.mapper;

import com.example.entity.StudentInfo;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface StudentInfoMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@Delete({ "delete from student", "where ID = #{ID,jdbcType=VARCHAR}" })
	int deleteByPrimaryKey(String ID);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@Insert({ "insert into student (ID, username, ", "passwords, S_name, ", "S_sex, S_IDcard, S_introduction, ",
			"S_qq, S_wei, S_emile, ", "S_mobile)", "values (#{ID,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, ",
			"#{passwords,jdbcType=VARCHAR}, #{S_name,jdbcType=VARCHAR}, ",
			"#{S_sex,jdbcType=CHAR}, #{S_IDcard,jdbcType=CHAR}, #{S_introduction,jdbcType=VARCHAR}, ",
			"#{S_qq,jdbcType=VARCHAR}, #{S_wei,jdbcType=VARCHAR}, #{S_emile,jdbcType=VARCHAR}, ",
			"#{S_mobile,jdbcType=DECIMAL})" })
	int insert(StudentInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@InsertProvider(type = StudentInfoSqlProvider.class, method = "insertSelective")
	int insertSelective(StudentInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@Select({ "select", "ID, username, passwords, S_name, S_sex, S_IDcard, S_introduction, S_qq, S_wei, ",
			"S_emile, S_mobile", "from student", "where ID = #{ID,jdbcType=VARCHAR}" })
	@Results({ @Result(column = "ID", property = "ID", jdbcType = JdbcType.VARCHAR, id = true),
			@Result(column = "username", property = "username", jdbcType = JdbcType.VARCHAR),
			@Result(column = "passwords", property = "passwords", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_name", property = "S_name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_sex", property = "S_sex", jdbcType = JdbcType.CHAR),
			@Result(column = "S_IDcard", property = "S_IDcard", jdbcType = JdbcType.CHAR),
			@Result(column = "S_introduction", property = "S_introduction", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_qq", property = "S_qq", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_wei", property = "S_wei", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_emile", property = "S_emile", jdbcType = JdbcType.VARCHAR),
			@Result(column = "S_mobile", property = "S_mobile", jdbcType = JdbcType.DECIMAL) })
	StudentInfo selectByPrimaryKey(String ID);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@UpdateProvider(type = StudentInfoSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(StudentInfo record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table student
	 * @mbg.generated  Sun Jul 08 23:52:53 CST 2018
	 */
	@Update({ "update student", "set username = #{username,jdbcType=VARCHAR},",
			"passwords = #{passwords,jdbcType=VARCHAR},", "S_name = #{S_name,jdbcType=VARCHAR},",
			"S_sex = #{S_sex,jdbcType=CHAR},", "S_IDcard = #{S_IDcard,jdbcType=CHAR},",
			"S_introduction = #{S_introduction,jdbcType=VARCHAR},", "S_qq = #{S_qq,jdbcType=VARCHAR},",
			"S_wei = #{S_wei,jdbcType=VARCHAR},", "S_emile = #{S_emile,jdbcType=VARCHAR},",
			"S_mobile = #{S_mobile,jdbcType=DECIMAL}", "where ID = #{ID,jdbcType=VARCHAR}" })
	int updateByPrimaryKey(StudentInfo record);
}